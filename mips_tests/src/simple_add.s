# ======================================================================
#  Файл: src/final_test.s (ВЕРСИЯ С ТЕСТОМ ОПТИМИЗАЦИИ LUI+ORI)
# ======================================================================
#  - После основного теста добавлен блок для проверки peephole-оптимизации.
# ======================================================================

.set   noreorder
.text

.org 0x1FC
_start_physical:
    nop

.org 0x200
_start:
    ### 1. Подготовка адреса для записи результата ###
    addiu $s0, $zero, 0x400

    ### 2. Тело основного теста ###
    ori  $t0, $zero, 42
    addu $t1, $t0, $zero

    ### 3. Проверка и формирование статуса ###
    ori  $t5, $zero, 42
    sltu $a0, $t1, $t5
    sltu $a1, $t5, $t1
    or   $a2, $a0, $a1

    ### 4. Запись результата в память ###
    sw   $a2, 0($s0)       # Memory[0x400] = статус (0 для PASS, >0 для FAIL)

    ### 6. Тест peephole-оптимизации LUI+ORI ###
    # Транслятор должен распознать эту пару и сгенерировать
    # оптимизированную последовательность RISC-V LUI+ADDI.
    # Загружаем константу 0xDEADBEEF в регистр $t6
    lui $t6, 0xDEAD
    ori $t6, $t6, 0xBEEF

    ### 7. Унифицированное завершение (НАДЕЖНЫЙ СПОСОБ) ###
    # Загружаем адрес выхода в регистр.
    addiu $t7, $zero, 0xF4
    # Прыгаем по адресу в регистре.
    jr   $t7
    nop                    # Слот задержки